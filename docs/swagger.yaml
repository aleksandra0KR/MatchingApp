basePath: /MatchingApp
host: localhost:8080
info:
  contact: {}
  description: finding your spotify match
  title: Matching App
paths:
  /addPlaylist:
    get:
      consumes:
      - application/json
      description: Render the template to add a playlist.
      produces:
      - text/html
      responses: {}
      summary: redirect to post request with html page
      tags:
      - playlists
  /createPlaylist:
    post:
      consumes:
      - application/json
      description: Create a new playlist for the authenticated user in their profile
        based on which program will find match.
      parameters:
      - description: Playlist ID
        in: formData
        name: playlistID
        required: true
        type: string
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Playlist created successfully
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Add a new playlist
      tags:
      - playlists
  /createUser:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided username, password, and email.
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new user
      tags:
      - users
  /login:
    get:
      consumes:
      - application/json
      description: Render the template to login a user
      produces:
      - text/html
      responses: {}
      summary: Render the login page
      tags:
      - users
  /loginUser:
    post:
      consumes:
      - application/json
      description: Authenticate a user with the provided username and password.
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            type: string
        "400":
          description: Invalid username or password
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login a user
      tags:
      - users
  /match:
    get:
      consumes:
      - application/json
      description: Match a playlist and render the template.
      produces:
      - text/html
      responses: {}
      summary: Match a playlist
      tags:
      - playlists
  /registrationUser:
    get:
      consumes:
      - application/json
      description: Render the template to register a new user.
      produces:
      - text/html
      responses: {}
      summary: Render the registration page and redirect to registration page with
        html
      tags:
      - users
swagger: "2.0"
